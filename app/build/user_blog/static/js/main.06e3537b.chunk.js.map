{"version":3,"sources":["WebAddress.js","Header.js","Footer.js","SmallView.js","MainView.js","ReadPostView.js","Loading.js","App.js","index.js"],"names":["web_address","Header","state","title","author","fetch","then","response","json","setState","id","this","React","Component","Footer","href","alt","src","SmallView","props","index","col_start","row_start","console","log","style","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","name","className","onClick","onClickHandler","MainView","display","gridTemplateColumns","gridTemplateRows","repeat","postTitles","length","map","indexOf","isReadingHandler","key","ReadPostView","body","sections","bodyComp","dangerouslySetInnerHTML","__html","Loading","class","App","isReading","post_titles","bind","e","target","ReactDOM","render","document","getElementById"],"mappings":"+WACeA,G,MADK,yBCGCC,G,kBACnB,aAAc,IAAD,8BACX,+CACKC,MAAQ,CACXC,MAAO,KACPC,OAAQ,MAJC,E,iFAOQ,IAAD,OACfC,MAAML,EAAc,iBACfM,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAAa,IACVJ,EAAiBI,EAAjBJ,MAAOC,EAAUG,EAAVH,OACZ,EAAKK,SAAS,CACZN,MAAOA,EACPC,OAAQA,Q,+BAKvB,OACE,yBAAKM,GAAG,UACLC,KAAKT,MAAMC,MAAQ,4BAAKQ,KAAKT,MAAMC,OAAc,KACjDQ,KAAKT,MAAME,OAAS,kCAAQO,KAAKT,MAAME,QAAe,U,GAvBzBQ,IAAMC,Y,MCD3B,SAASC,IACtB,OACE,yBAAKJ,GAAG,UACN,yDACE,uBAAGK,KAAK,6BACR,yBAAKC,IAAI,uCAAuCC,IAAI,uDAFtD,M,MCFS,SAASC,EAAUC,GAC9B,IAAIC,EAAQD,EAAMC,MACdC,EAAkBD,EAAQ,EAAb,EAAkB,EAAK,EACpCE,EAAYF,EAASA,EAAQ,IAAO,EAAI,GAAQA,EAASA,EAAQ,GAAM,EAA3B,EAEhDG,QAAQC,IAAIJ,EAAOE,EAAWD,GAC9B,IAAII,EAAQ,CACVC,gBAAiBL,EACjBM,cAAeN,EAAY,EAC3BO,aAAcN,EACdO,WAAYP,EAAY,GAE1B,OACE,4BAAQQ,KAAMX,EAAMW,KAAMC,UAAU,oBAAoBN,MAAOA,EAAOO,QAASb,EAAMc,gBAClFd,EAAMhB,O,MCbA,SAAS+B,EAASf,GAE7B,IAAIM,EAAQ,CACRU,QAAS,OACTC,oBAAqB,wCACrBC,iBAAkB,cAAcC,OAC9BnB,EAAMoB,WAAWC,OAAUrB,EAAMoB,WAAWC,OAAS,IAAO,EAAI,GAAMrB,EAAMoB,WAAWC,OAAUrB,EAAMoB,WAAWC,OAAS,GAAM,EAAK,IAG5I,OACE,yBAAK9B,GAAG,YAAYe,MAAOA,GAE3BN,EAAMoB,WAAWE,IAAI,SAACtC,GACpB,OACA,kBAAC,EAAD,CAAWiB,MAAOD,EAAMoB,WAAWG,QAAQvC,GAAQA,MAAOA,EAAO2B,KAAM3B,EAAO8B,eAAgBd,EAAMwB,iBAAkBC,IAAKzC,O,UCf9G0C,E,YACnB,aAAc,IAAD,8BACX,+CACK3C,MAAQ,CACX4C,KAAM,IAHG,E,iFAOO,IAAD,OACjBzC,MAAML,EAAc,iBAAmBW,KAAKQ,MAAMhB,OACjDG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACJgB,QAAQC,IAAIjB,GACZ,EAAKE,SAAS,CACZqC,KAAMvC,EAASwC,e,+BAMX,IAAD,OACP,OACE,yBAAKrC,GAAG,kBACR,4BAAQsB,QAASrB,KAAKQ,MAAMwB,iBAAkBb,KAAK,WAAnD,WACA,4BAAKnB,KAAKQ,MAAMhB,OAEdQ,KAAKT,MAAM4C,KAAKL,IACd,SAACO,GACC,OAAIA,EAAS/B,IACH,yBAAKA,IAAK+B,EAAS/B,IAAKD,IAAKgC,EAAShC,IAAK4B,IAAK,EAAK1C,MAAM4C,KAAKJ,QAAQM,KAExE,uBAAGJ,IAAK,EAAK1C,MAAM4C,KAAKJ,QAAQM,GAAWC,wBAAyB,CAAEC,OAAQF,Y,GA/B1DpC,IAAMC,W,MCDjC,SAASsC,IACtB,OACG,yBAAKC,MAAM,W,ICuDDC,E,YAlDb,aAAc,IAAD,8BACX,+CACKnD,MAAQ,CACXoD,WAAW,EACXnD,MAAO,KACPoD,YAAa,IAEf,EAAKZ,iBAAmB,EAAKA,iBAAiBa,KAAtB,gBAPb,E,8EAUIC,GAAI,IACd3B,EAAQ2B,EAAEC,OAAV5B,KACQ,YAATA,EAAoBnB,KAAKF,SAAS,CACpC6C,WAAW,EACXnD,MAAO,OAEPQ,KAAKF,SAAS,CACZ6C,WAAW,EACXnD,MAAO2B,M,0CAKO,IAAD,OACjBzB,MAAML,EAAc,sBACnBM,KAAK,SAACC,GACL,OAAOA,EAASC,SACfF,KAAK,SAACC,GACPgB,QAAQC,IAAIjB,GACZ,EAAKE,SAAS,CACZ8C,YAAahD,Q,+BAMnB,OACE,yBAAKG,GAAG,OACN,kBAAC,EAAD,MACoC,IAAlCC,KAAKT,MAAMqD,YAAYf,OACtB7B,KAAKT,MAAMoD,UACV,kBAAC,EAAD,CAAcX,iBAAkBhC,KAAKgC,iBAAkBxC,MAAOQ,KAAKT,MAAMC,QACzE,kBAAC,EAAD,CAAUoC,WAAY5B,KAAKT,MAAMqD,YAAaZ,iBAAkBhC,KAAKgC,mBACrE,kBAAC,EAAD,MACJ,kBAAC,EAAD,W,GA7CY/B,IAAMC,WCJxB8C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.06e3537b.chunk.js","sourcesContent":["const web_address = \"http://127.0.0.1:5000\"\r\nexport default web_address\r\n","import React from 'react'\r\nimport web_address from \"./WebAddress\"\r\nimport './Header.css'\r\nexport default class Header extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      title: null,\r\n      author: null\r\n    }\r\n  }\r\n  componentDidMount() {\r\n       fetch(web_address + \"/api/get_info\")\r\n           .then(response => response.json())\r\n           .then(response => {\r\n               let {title, author} = response\r\n               this.setState({\r\n                 title: title,\r\n                 author: author\r\n               })\r\n           })\r\n   }\r\n  render(){\r\n  return (\r\n    <div id=\"header\">\r\n      {this.state.title ? <h1>{this.state.title}</h1> : null}\r\n      {this.state.author ? <h2>by {this.state.author}</h2> : null}\r\n    </div>\r\n  );\r\n}\r\n}\r\n","import React from 'react'\r\nimport './Footer.css'\r\nexport default function Footer() {\r\n  return (\r\n    <div id=\"footer\">\r\n      <h2>Designed and Programmed by\r\n        <a href=\"https://github.com/gerroo\">\r\n        <img alt=\"face of the programmer who made this\" src=\"https://avatars0.githubusercontent.com/u/19212309\"></img></a>.</h2>\r\n    </div>\r\n  );\r\n\r\n}\r\n","import React from 'react'\r\nimport \"./SmallView.css\"\r\n\r\nexport default function SmallView(props) {\r\n    let index = props.index;\r\n    let col_start = (2 * (index % 3) + 1) + 1;\r\n    let row_start = index - (index % 3) === 0 ? 0 : 2*((index - (index % 3)) / 3);\r\n\r\n    console.log(index, row_start, col_start);\r\n    let style = {\r\n      gridColumnStart: col_start,\r\n      gridColumnEnd: col_start + 1,\r\n      gridRowStart: row_start,\r\n      gridRowEnd: row_start + 1,\r\n    };\r\n    return (\r\n      <button name={props.name} className=\"small-view-button\" style={style} onClick={props.onClickHandler}>\r\n        {props.title}\r\n      </button>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport SmallView from \"./SmallView\"\r\nimport \"./MainView.css\"\r\n\r\nexport default function MainView(props) {\r\n\r\n    let style = {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"40px 300px 40px 300px 40px 300px 40px\",\r\n        gridTemplateRows: \"40px 300px \".repeat(\r\n          props.postTitles.length - (props.postTitles.length % 3) === 0 ? 0 : ((props.postTitles.length - (props.postTitles.length % 3)) / 3) - 1\r\n        )\r\n    }\r\n    return (\r\n      <div id=\"main-view\" style={style}>\r\n      {\r\n      props.postTitles.map((title) => {\r\n        return (\r\n        <SmallView index={props.postTitles.indexOf(title)} title={title} name={title} onClickHandler={props.isReadingHandler} key={title}/>\r\n      );\r\n      })\r\n      }\r\n      </div>\r\n  );\r\n\r\n}\r\n","import  React from 'react'\r\nimport web_address from './WebAddress'\r\nimport \"./ReadPostView.css\"\r\nexport default class ReadPostView extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      body: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch(web_address + \"/api/get_post/\" + this.props.title)\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      console.log(response)\r\n      this.setState({\r\n        body: response.sections\r\n        })\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"read-post-view\">\r\n      <button onClick={this.props.isReadingHandler} name=\"go_back\">Go Back</button>\r\n      <h1>{this.props.title}</h1>\r\n      {\r\n        this.state.body.map(\r\n          (bodyComp) => {\r\n            if (bodyComp.src){\r\n              return (<img src={bodyComp.src} alt={bodyComp.alt} key={this.state.body.indexOf(bodyComp)}/>);\r\n            } else{\r\n              return (<p key={this.state.body.indexOf(bodyComp)} dangerouslySetInnerHTML={{ __html: bodyComp }}></p>)\r\n            }\r\n          }\r\n        )\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport \"./Loading.css\"\r\nexport default function Loading() {\r\n  return (\r\n     <div class=\"loader\">\r\n     </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Header from './Header'\nimport Footer from './Footer'\nimport MainView from './MainView'\nimport ReadPostView from './ReadPostView'\nimport web_address from './WebAddress'\nimport Loading from './Loading'\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      isReading: false,\n      title: null,\n      post_titles: []\n    }\n    this.isReadingHandler = this.isReadingHandler.bind(this);\n  }\n\n  isReadingHandler(e) {\n    let {name} = e.target;\n    if (name === \"go_back\"){this.setState({\n      isReading: false,\n      title: null\n    })} else {\n      this.setState({\n        isReading: true,\n        title: name\n      })\n    }\n  }\n\n  componentDidMount(){\n    fetch(web_address + \"/api/get_post_list\")\n    .then((response) => {\n      return response.json()\n    }).then((response) => {\n      console.log(response)\n      this.setState({\n        post_titles: response\n      })\n    })\n  }\n\n  render(){\n  return (\n    <div id=\"app\">\n      <Header />\n      { this.state.post_titles.length !== 0 ?\n        (this.state.isReading\n        ? <ReadPostView isReadingHandler={this.isReadingHandler} title={this.state.title}/>\n        : <MainView postTitles={this.state.post_titles} isReadingHandler={this.isReadingHandler}/>)\n        : <Loading />}\n      <Footer />\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}